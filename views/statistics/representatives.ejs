<% include ../../partials/header.ejs %>

<h1>Statistics</h1>

<h2>Tribes Decentralization</h2>

<div class="row">
  <div class="col">
    <h3>All Tribes</h3>
    <canvas id="chartrepsdecen"></canvas>
  </div>
  <div class="col">
    <h3>Tribes Online</h3>
    <canvas id="chartrepsdecenonline"></canvas>
  </div>
</div>


<script>
  const nf_reps = [
    "paw_3yyz45ztct47x4ai3onfbkkuorzpdtnb15cmnhu8fhosnxrgci8c5xp8xbf6",
  ];

  var chartColorsReps = ['#f44336', '#9C27B0', '#3F51B5', '#03A9F4', '#009688', '#8BC34A', '#FFEB3B', '#FF9800'];
  init.push(setupActiveReps);

  function setupActiveReps(){
    getDataActiveReps('chartrepsdecen', '/api/accounts/principals');
    getDataActiveReps('chartrepsdecenonline', '/api/accounts/principals/online');
  }

  function getDataActiveReps(chartid, url) {
    console.log(chartid, url)
    $.get(url, function (data) {

      var chartdata = {
        labels: [],
        datasets: [
          {
            label: 'Representatives',
            data: [],
            backgroundColor: []
          }
        ]
      };

      // filter the Nano Foundation reps
      chartdata.labels.push('PAWR Digital');
      chartdata.datasets[0].data.push(Math.round(data.filter(rep => nf_reps.includes(rep.account)).sum('votingweight') / 1000000000000000000000000000));
      chartdata.datasets[0].backgroundColor.push('#AAAAAA');

      var colorcount = 0;
      data.forEach(function (element) {
        // skip the Nano Foundation reps
        if (nf_reps.includes(element.account)) return;

        if (element.alias) {
          chartdata.labels.push(element.alias);
        } else {
          chartdata.labels.push(element.account);
        }

        chartdata.datasets[0].data.push(Math.round(element.votingweight / 1000000000000000000000000000));
        chartdata.datasets[0].backgroundColor.push(chartColorsReps[colorcount]);
        colorcount++;
        if (colorcount > chartColorsReps.length - 1) colorcount = 0;
      });

      setupGraphRepsDecen(chartid, chartdata);
    });
  }

  Array.prototype.sum = function (prop) {
    var total = 0
    for (var i = 0, _len = this.length; i < _len; i++) {
      total += this[i][prop]
    }
    return total
  }

  function setupGraphRepsDecen(chartid, data) {

    var ctx = document.getElementById(chartid).getContext('2d');
    var chartRepsDecen = new Chart(ctx, {
      type: 'doughnut',
      data: data,
      options: {
        responsive: true,
        cutoutPercentage: 0,
        legend: {
          display: false
        }
      }
    });
  }
</script>

<h2 class="mt-3">Tribes over Time</h2>
<canvas id="chartcanvas"></canvas>

<script>
  var chartColors = ['#f44336', '#2196F3', '#4CAF50'];
  init.push(getData);

  function getData() {
    $.get("/api/statistics/representatives", function (data) {
      var chartdata = {
        labels: [],
        datasets: [{
          label: 'Total',
          data: [],
          borderColor: chartColors[0],
          backgroundColor: hexToRgbA(chartColors[0], '0.2'),
          hidden: true
        },
        {
          label: 'Principals',
          data: [],
          borderColor: chartColors[1],
          backgroundColor: hexToRgbA(chartColors[1], '0.2'),
          hidden: true
        },
        {
          label: 'Online',
          data: [],
          borderColor: chartColors[2],
          backgroundColor: hexToRgbA(chartColors[2], '0.2')
        }]
      };

      data.forEach(function (element) {
        chartdata.labels.push(formatDate(element.date));
        chartdata.datasets[0].data.push(element.representatives.total);
        chartdata.datasets[1].data.push(element.representatives.eligible);
        chartdata.datasets[2].data.push(element.representatives.online);
      });

      setupGraph(chartdata);
    });
  }

  function formatDate(date) {
    return moment(date).format('YYYY-MM-DD HH:mm');
  }

  function hexToRgbA(hex, opacity) {
    var c;
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
      c = hex.substring(1).split('');
      if (c.length == 3) {
        c = [c[0], c[0], c[1], c[1], c[2], c[2]];
      }
      c = '0x' + c.join('');
      return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + opacity + ')';
    }
    throw new Error('Bad Hex');
  }

  function setupGraph(data) {
    var ctx = document.getElementById('chartcanvas').getContext('2d');
    var myLineChart = new Chart(ctx, {
      type: 'line',
      data: data,
      options: {
        responsive: true
      }
    });
  }
</script>



<h2 class="mt-3">Quorum</h2>
<canvas id="chartcanvasquorum"></canvas>

<script>
  var chartColors = ['#f44336', '#2196F3', '#4CAF50'];
  init.push(getDataQuorum);

  function getDataQuorum() {
    $.get("/api/statistics/quorum", function (data) {
      var chartdata = {
        labels: [],
        datasets: [{
          label: 'Quorum Delta',
          data: [],
          borderColor: chartColors[0],
          backgroundColor: hexToRgbA(chartColors[0], '0.2')
        },
        {
          label: 'Online Stake Total',
          data: [],
          borderColor: chartColors[1],
          backgroundColor: hexToRgbA(chartColors[1], '0.2')
        },
        {
          label: 'Peers Stake Total',
          data: [],
          borderColor: chartColors[2],
          backgroundColor: hexToRgbA(chartColors[2], '0.2')
        }]
      };

      data.forEach(function (element) {
        chartdata.labels.push(formatDate(element.date));
        chartdata.datasets[0].data.push(element.quorum_delta / 1000000000000000000000000000);
        chartdata.datasets[1].data.push(element.online_stake_total / 1000000000000000000000000000);
        chartdata.datasets[2].data.push(element.peers_stake_total / 1000000000000000000000000000);
      });

      setupGraphQuorum(chartdata);
    });
  }

  function setupGraphQuorum(data) {
    var ctx = document.getElementById('chartcanvasquorum').getContext('2d');
    var myLineChart = new Chart(ctx, {
      type: 'line',
      data: data,
      options: {
        responsive: true
      }
    });
  }
</script>

<script src="/static/js/moment.min.js"></script>
<script src="/static/js/Chart.min.js"></script>

<% include ../../partials/footer.ejs %>
